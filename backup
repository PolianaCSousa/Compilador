  '''while simbolo in ['/', ' ', '\t', '\n']:
            if simbolo == '/':
                simbolo = self.getchar()
                while simbolo != '\n':
                    simbolo = self.getchar()
            while simbolo in [' ', '\t', '\n']:
                simbolo = self.getchar()


        #definimos comentários como // , então quando vem uma / é preciso verificar se é um comentário ou não
        if simbolo == '/':
            estado = 0

        #quando acha um lexema, interrompe o while e retorna o token, lexema, linha e coluna para quem chamou
        while(True):

            if estado == 0:
                #trata comentários
                while simbolo in ['/', ' ', '\t', '\n']:
                    if simbolo == '/':
                        simbolo = self.getchar()
                        while simbolo != '\n':
                            simbolo = self.getchar()
                    while simbolo in [' ','\t','\n']:
                        simbolo = self.getchar()
        '''


//comentario teste
program TESTE;
var
    a, b, soma, divisao: real;
begin
    writeln('entre com a: ');
    readln(a);
    writeln('entre com b: ');
    readln(b);

    soma := a + b * (2 + 5.4);

    if soma >= 0 then
        a := 0
    else
    begin
        b := 3;
        a := b + 5;
    end;

    divisao := a / b;
    writeln('soma = ', soma);
end.




---------------------


        while simbolo in ["/", " ", "\t", "\n"]:
            # descarta comentários (que iniciam com // até o fim da linha)
            if simbolo == "/":
                #lexema = lexema + simbolo
                simbolo = self.getchar()
                if simbolo == "/":
                    simbolo = self.getchar()

                    while simbolo != "\n":
                        simbolo = self.getchar()
                else:
                    # Se não for um comentário, o caractere '/' não deve ser descartado.
                    self.ungetchar(simbolo)  # retorna o caractere
                    simbolo = "/"
                    break
            # descarta linhas brancas e espaços
            while simbolo in [" ", "\t", "\n"]:
                simbolo = self.getchar()



---------------------


  '''
        # descarta comentários (os comentários iniciam com //
        if simbolo == '/':
            simbolo = self.getchar()
            if simbolo == '/':
                while simbolo in ['/', ' ', '\t', '\n']:
                    #descarta tudo o que vier depois de // até encontrar um \n
                    simbolo = self.getchar()
                    while simbolo != '\n':
                        simbolo = self.getchar()
                    #descarta linhas brancas e espaços em branco
                    while simbolo in [' ', '\t', '\n']:
                        simbolo = self.getchar()

            # vai para o estado que cuida das divisoes com a barra
            else:
                pass
        '''


'''

program TESTE;
var
    numeros: array[1..10] of integer;
    a, b, soma, divisao: real;

procedure ExibirMensagem(msg: string);
begin
    writeln(msg);
end;

function Multiplicar(x, y: real): real;
begin
    Multiplicar := x * y;
end;

begin
    writeln('Entre com a: ');
    readln(a);
    writeln('Entre com b: ');
    readln(b);

    soma := Multiplicar(a, b) + (2 + 5.4);

    if soma >= 0 then
        a := 0
    else
    begin
        b := 3;
        a := b + 5;
    end;

    divisao := a / b;
    writeln('soma = ', soma);

    ExibirMensagem('Teste do procedimento ExibirMensagem');
end.




'''